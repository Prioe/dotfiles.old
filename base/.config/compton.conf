# backend = "glx";
# glx-no-stencil = true;
# glx-copy-from-front = false;
# glx-swap-method = "undefined";
# # Enabled client-side shadows on windows.
# shadow = true;
# # Don't draw shadows on DND windows.
# no-dnd-shadow = true;
# # Avoid drawing shadows on dock/panel windows.
# no-dock-shadow = false;
# # Zero the part of the shadow's mask behind the window. Fix some weirdness with ARGB windows.
# clear-shadow = true;
# # The blur radius for shadows. (default 12)
# shadow-radius = 7;
# # The left offset for shadows. (default -15)
# shadow-offset-x = -7;
# # The top offset for shadows. (default -15)
# shadow-offset-y = -7;
# # The translucency for shadows. (default .75)
# shadow-opacity = 0.8;
# 
# # Set if you want different colour shadows
# # shadow-red = 1.0;
# # shadow-green = 0.4;
# # shadow-blue = 0.0;
# 
# # The shadow exclude options are helpful if you have shadows enabled. Due to the way compton draws its shadows, certain applications will have visual glitches
# # (most applications are fine, only apps that do weird things with xshapes or argb are affected).
# # This list includes all the affected apps I found in my testing. The "! name~=''" part excludes shadows on any "Unknown" windows, this prevents a visual glitch with the XFWM alt tab switcher.
# #shadow-exclude = [
# #    "! name~=''",
# #    "name = 'Notification'",
# #    "name = 'Plank'",
# #    "name = 'Docky'",
# #    "name = 'Kupfer'",
# #    "name = 'xfce4-notifyd'",
# #    "name *= 'VLC'",
# #    "name *= 'compton'",
# #    "name *= 'Chromium'",
# #    "name *= 'Chrome'",
# #    "name *= 'Firefox'",
# #    "class_g = 'Conky'"
# #    "class_g = 'Kupfer'",
# #    "class_g = 'Synapse'",
# #    "class_g ?= 'Notify-osd'",
# #    "class_g ?= 'Cairo-dock'",
# #    "class_g ?= 'Xfce4-notifyd'",
# #    "class_g ?= 'Xfce4-power-manager'"
# #];
# # Avoid drawing shadow on all shaped windows (see also: --detect-rounded-corners)
# shadow-ignore-shaped = false;
# 
# #################################
# #
# # Opacity
# #
# #################################
# 
# menu-opacity = 1;
# inactive-opacity = 0.9;
# active-opacity = 1;
# frame-opacity = 1;
# inactive-opacity-override = false;
# alpha-step = 0.06;
# 
# # Dim inactive windows. (0.0 - 1.0)
# # inactive-dim = 0.2;
# # Do not let dimness adjust based on window opacity.
# # inactive-dim-fixed = true;
# # Blur background of transparent windows. Bad performance with X Render backend. GLX backend is preferred.
# # blur-background = true;
# # Blur background of opaque windows with transparent frames as well.
# # blur-background-frame = true;
# # Do not let blur radius adjust based on window opacity.
# blur-background-fixed = false;
# blur-background-exclude = [
#     "window_type = 'dock'",
#     "window_type = 'desktop'"
# ];
# 
# #################################
# #
# # Fading
# #
# #################################
# 
# # Fade windows during opacity changes.
# fading = true;
# # The time between steps in a fade in milliseconds. (default 10).
# fade-delta = 4;
# # Opacity change between steps while fading in. (default 0.028).
# fade-in-step = 0.03;
# # Opacity change between steps while fading out. (default 0.03).
# fade-out-step = 0.03;
# # Fade windows in/out when opening/closing
#  no-fading-openclose = false;
# 
# # Specify a list of conditions of windows that should not be faded.
# #fade-exclude = [ ];
# 
# #################################
# #
# # Other
# #
# #################################
# 
# # Try to detect WM windows and mark them as active.
# mark-wmwin-focused = true;
# # Mark all non-WM but override-redirect windows active (e.g. menus).
# mark-ovredir-focused = true;
# # Use EWMH _NET_WM_ACTIVE_WINDOW to determine which window is focused instead of using FocusIn/Out events.
# # Usually more reliable but depends on a EWMH-compliant WM.
# use-ewmh-active-win = true;
# # Detect rounded corners and treat them as rectangular when --shadow-ignore-shaped is on.
# detect-rounded-corners = true;
# 
# # Detect _NET_WM_OPACITY on client windows, useful for window managers not passing _NET_WM_OPACITY of client windows to frame windows.
# # This prevents opacity being ignored for some apps.
# # For example without this enabled my xfce4-notifyd is 100% opacity no matter what.
# detect-client-opacity = true;
# 
# # Specify refresh rate of the screen.
# # If not specified or 0, compton will try detecting this with X RandR extension.
# refresh-rate = 0;
# 
# # Set VSync method. VSync methods currently available:
# # none: No VSync
# # drm: VSync with DRM_IOCTL_WAIT_VBLANK. May only work on some drivers.
# # opengl: Try to VSync with SGI_video_sync OpenGL extension. Only work on some drivers.
# # opengl-oml: Try to VSync with OML_sync_control OpenGL extension. Only work on some drivers.
# # opengl-swc: Try to VSync with SGI_swap_control OpenGL extension. Only work on some drivers. Works only with GLX backend. Known to be most effective on many drivers. Does not actually control paint timing, only buffer swap is affected, so it doesnâ€™t have the effect of --sw-opti unlike other methods. Experimental.
# # opengl-mswc: Try to VSync with MESA_swap_control OpenGL extension. Basically the same as opengl-swc above, except the extension we use.
# # (Note some VSync methods may not be enabled at compile time.)
# vsync = "opengl-swc";
# 
# # Enable DBE painting mode, intended to use with VSync to (hopefully) eliminate tearing.
# # Reported to have no effect, though.
# dbe = false;
# # Painting on X Composite overlay window. Recommended.
# paint-on-overlay = true;
# 
# # Limit compton to repaint at most once every 1 / refresh_rate second to boost performance.
# # This should not be used with --vsync drm/opengl/opengl-oml as they essentially does --sw-opti's job already,
# # unless you wish to specify a lower refresh rate than the actual value.
# sw-opti = false;
# 
# # Unredirect all windows if a full-screen opaque window is detected, to maximize performance for full-screen windows, like games.
# # Known to cause flickering when redirecting/unredirecting windows.
# # paint-on-overlay may make the flickering less obvious.
# unredir-if-possible = true;
# 
# # Specify a list of conditions of windows that should always be considered focused.
# focus-exclude = [
# #    "name = 'Notification'",
# #    "name = 'Plank'",
# #    "name = 'Docky'",
# #    "name = 'Kupfer'",
# #    "name = 'xfce4-notifyd'",
# #    "name *= 'VLC'",
# #    "name *= 'compton'",
# #    "name *= 'Chrome'",
# #    "name *= 'Firefox'",
# #    "class_g = 'Conky'"
# #    "class_g = 'Kupfer'",
# #    "class_g = 'Synapse'",
# #    "class_g ?= 'Notify-osd'",
# #    "class_g ?= 'Cairo-dock'",
# #    "class_g ?= 'Xfce4-notifyd'",
# #    "class_g ?= 'Xfce4-power-manager'",
#     "class_g = 'Totem'",
#     "class_g = 'Chromium'",
#     "class_g = 'plexmediaplayer'"
# ];
# 
# # Use WM_TRANSIENT_FOR to group windows, and consider windows in the same group focused at the same time.
# detect-transient = true;
# # Use WM_CLIENT_LEADER to group windows, and consider windows in the same group focused at the same time.
# # WM_TRANSIENT_FOR has higher priority if --detect-transient is enabled, too.
# detect-client-leader = true;
# 
# #################################
# #
# # Window type settings
# #
# #################################
# 
# wintypes:
# {
#     tooltip :
#     {
#         fade = true;
#         shadow = false;
#         opacity = 0.85;
#         focus = true;
#     };
#     dock :
#     {
#         opacity = 0.85;
#     };
#     dropdown_menu :
#     {
#         shadow = true;
#     };
# };




# Shadow

shadow = true;
no-dnd-shadow = true;
no-dock-shadow = false;
clear-shadow = true;
shadow-radius = 7;
shadow-offset-x = -7;
shadow-offset-y = -7;
shadow-opacity = 0.8;
shadow-red = 0.0;
shadow-green = 0.0;
shadow-blue = 0.0;
shadow-exclude = [
  "name = 'Notification'",
    "class_g = 'conky'",
    "name = 'n30f'",
        "class_g = 'i3-frame'",
        "class_g = 'feh'",
        "class_g = 'URxvt'",
        "name = 'dzen slave'",
        "class_g = 'mpv'",
  "class_g ?= 'Notify-osd'",
  "class_g = 'Cairo-clock'",
  "_GTK_FRAME_EXTENTS@:c"
];

# shadow-exclude = "n:e:Notification";
# shadow-exclude-reg = "x10+0+0";
# xinerama-shadow-crop = true;

# Opacity
#menu-opacity = 0.9;
#inactive-opacity = 0.8;
#active-opacity = 0.8;
#frame-opacity = 0.9;
#inactive-opacity-override = false;
#alpha-step = 0.06;
# inactive-dim = 0.2;
# inactive-dim-fixed = true;
#blur-background = true;
#blur-background-frame = true;
#blur-kern = "3x3box"
# blur-kern = "5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
# blur-background-fixed = true;
#blur-background-exclude = [
#	"window_type = 'dock'",
#	"window_type = 'desktop'",
#	"_GTK_FRAME_EXTENTS@:c"
#];
opacity-rule = [ 
        "95:class_g= 'Polybar'"
        ];

# Fading
fading = true;
# fade-delta = 30;
fade-in-step = 0.05;
fade-out-step = 0.05;
# no-fading-openclose = true;
# no-fading-destroyed-argb = true;
fade-exclude = [ ];

# Other
#backend = "xrender"
#mark-wmwin-focused = true;
#mark-ovredir-focused = true;
# use-ewmh-active-win = true;
detect-rounded-corners = true;
detect-client-opacity = true;
refresh-rate = 0;
vsync = "none";
dbe = false;
paint-on-overlay = true;
# sw-opti = true;
# unredir-if-possible = true;
# unredir-if-possible-delay = 5000;
# unredir-if-possible-exclude = [ ];
#focus-exclude = [ "class_g = 'Cairo-clock'" ];
#detect-transient = true;
#detect-client-leader = true;
#invert-color-include = [ ];
# resize-damage = 1;

# GLX backend
# glx-no-stencil = true;
#glx-copy-from-front = false;
# glx-use-copysubbuffermesa = true;
# glx-no-rebind-pixmap = true;
#glx-swap-method = "undefined";
# glx-use-gpushader4 = true;
# xrender-sync = true;
# xrender-sync-fence = true;

# Window type settings
#wintypes:
#{
# tooltip = { fade = true; shadow = true; opacity = 0.90; focus = true; };
#};
